<div class="auth-page">
    <div class="container">
        <div class="auth-wrapper">
            <!-- Auth Image/Branding -->
            <div class="auth-image">
                <div class="auth-brand">
                    <h2>Aprends<span class="accent">AGRO</span></h2>
                    <p>Transformando o futuro do agroneg√≥cio atrav√©s da educa√ß√£o</p>
                </div>
                <div class="auth-illustration">
                    <div class="illustration-content">
                        üåæ üöú üìö
                    </div>
                </div>
            </div>

            <!-- Login Form -->
            <div class="auth-form-container">
                <div class="form-container">
                    <div class="form-header">
                        <h1 class="form-title">Bem-vindo de volta!</h1>
                        <p class="form-subtitle">Fa√ßa login para acessar seus cursos</p>
                    </div>

                    <form id="login-form" class="auth-form" novalidate>
                        <div class="form-group">
                            <label for="email">E-mail</label>
                            <input 
                                type="email" 
                                id="email" 
                                name="email" 
                                class="form-control" 
                                placeholder="seu@email.com"
                                required
                                autocomplete="email"
                            >
                        </div>

                        <div class="form-group">
                            <label for="password">Senha</label>
                            <div class="password-input">
                                <input 
                                    type="password" 
                                    id="password" 
                                    name="password" 
                                    class="form-control" 
                                    placeholder="Sua senha"
                                    required
                                    autocomplete="current-password"
                                >
                                <button 
                                    type="button" 
                                    class="password-toggle" 
                                    aria-label="Mostrar/ocultar senha"
                                >
                                    üëÅÔ∏è
                                </button>
                            </div>
                        </div>

                        <div class="form-options">
                            <label class="checkbox-container">
                                <input type="checkbox" name="remember" id="remember">
                                <span class="checkmark"></span>
                                Lembrar de mim
                            </label>
                            <a href="/esqueci-senha" class="forgot-link">
                                Esqueci minha senha
                            </a>
                        </div>

                        <button type="submit" class="btn btn-primary btn-full">
                            Entrar
                        </button>

                        <div class="divider">
                            <span>ou</span>
                        </div>

                        <div class="social-login">
                            <button type="button" class="btn btn-social btn-google">
                                <span class="social-icon">G</span>
                                Continuar com Google
                            </button>
                            <button type="button" class="btn btn-social btn-microsoft">
                                <span class="social-icon">M</span>
                                Continuar com Microsoft
                            </button>
                        </div>
                    </form>

                    <div class="form-footer">
                        <p>N√£o tem uma conta? <a href="/register">Cadastre-se aqui</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
/* Estilos espec√≠ficos para p√°ginas de autentica√ß√£o */
.auth-page {
    min-height: calc(100vh - 70px);
    display: flex;
    align-items: center;
    padding: 2rem 0;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.auth-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    max-width: 1000px;
    margin: 0 auto;
    background-color: var(--white);
    border-radius: var(--border-radius);
    box-shadow: 0 10px 40px rgba(16, 56, 79, 0.1);
    overflow: hidden;
    min-height: 600px;
}

.auth-image {
    background: linear-gradient(135deg, var(--primary-color) 0%, #1a4f6b 100%);
    color: var(--white);
    padding: 3rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    overflow: hidden;
}

.auth-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 20"><defs><pattern id="dots" width="20" height="20" patternUnits="userSpaceOnUse"><circle cx="10" cy="10" r="1" fill="%23ffffff" opacity="0.1"/></pattern></defs><rect width="100" height="20" fill="url(%23dots)"/></svg>');
}

.auth-brand {
    position: relative;
    z-index: 2;
    margin-bottom: 2rem;
}

.auth-brand h2 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.auth-brand .accent {
    color: var(--accent-green);
}

.auth-brand p {
    opacity: 0.9;
    line-height: 1.6;
}

.auth-illustration {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 2;
}

.illustration-content {
    font-size: 4rem;
    opacity: 0.8;
    animation: float 3s ease-in-out infinite;
}

.auth-form-container {
    padding: 3rem;
    display: flex;
    align-items: center;
}

.form-container {
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
}

.form-header {
    text-align: center;
    margin-bottom: 2rem;
}

.form-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: var(--primary-color);
    margin-bottom: 0.5rem;
}

.form-subtitle {
    color: var(--gray-dark);
    margin-bottom: 0;
}

.auth-form .form-group {
    margin-bottom: 1.5rem;
}

.password-input {
    position: relative;
}

.password-toggle {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    opacity: 0.6;
    transition: var(--transition);
}

.password-toggle:hover {
    opacity: 1;
}

.form-options {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    font-size: 0.9rem;
}

.checkbox-container {
    display: flex;
    align-items: center;
    cursor: pointer;
    position: relative;
    padding-left: 25px;
}

.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

.checkmark {
    position: absolute;
    left: 0;
    top: 2px;
    height: 16px;
    width: 16px;
    background-color: var(--gray-light);
    border: 2px solid var(--gray-medium);
    border-radius: 3px;
    transition: var(--transition);
}

.checkbox-container:hover .checkmark {
    border-color: var(--accent-green);
}

.checkbox-container input:checked ~ .checkmark {
    background-color: var(--accent-green);
    border-color: var(--accent-green);
}

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
    left: 4px;
    top: 1px;
    width: 4px;
    height: 8px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

.checkbox-container input:checked ~ .checkmark:after {
    display: block;
}

.forgot-link {
    color: var(--accent-blue);
    text-decoration: none;
    transition: var(--transition);
}

.forgot-link:hover {
    text-decoration: underline;
}

.btn-full {
    width: 100%;
    padding: 0.875rem;
    font-size: 1rem;
    font-weight: 500;
}

.divider {
    text-align: center;
    margin: 1.5rem 0;
    position: relative;
    color: var(--gray-dark);
}

.divider::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: var(--gray-medium);
}

.divider span {
    background-color: var(--white);
    padding: 0 1rem;
    position: relative;
    z-index: 1;
}

.social-login {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.btn-social {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.75rem;
    border: 2px solid var(--gray-medium);
    background-color: var(--white);
    color: var(--primary-color);
    border-radius: var(--border-radius);
    transition: var(--transition);
    font-weight: 500;
}

.btn-social:hover {
    border-color: var(--primary-color);
    box-shadow: var(--shadow);
}

.social-icon {
    width: 20px;
    height: 20px;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 0.8rem;
}

.btn-google .social-icon {
    background-color: #db4437;
    color: white;
}

.btn-microsoft .social-icon {
    background-color: #0078d4;
    color: white;
}

.form-footer {
    text-align: center;
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--gray-light);
}

.form-footer a {
    color: var(--accent-blue);
    text-decoration: none;
    font-weight: 500;
}

.form-footer a:hover {
    text-decoration: underline;
}

/* Loading state */
.btn[disabled] {
    opacity: 0.6;
    cursor: not-allowed;
}

.btn.loading {
    position: relative;
    color: transparent;
}

.btn.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border: 2px solid currentColor;
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    color: inherit;
}

/* Responsividade */
@media (max-width: 768px) {
    .auth-wrapper {
        grid-template-columns: 1fr;
        margin: 1rem;
    }
    
    .auth-image {
        padding: 2rem;
        min-height: 300px;
    }
    
    .auth-brand h2 {
        font-size: 1.5rem;
    }
    
    .illustration-content {
        font-size: 3rem;
    }
    
    .auth-form-container {
        padding: 2rem;
    }
    
    .form-title {
        font-size: 1.5rem;
    }
}

@media (max-width: 480px) {
    .auth-page {
        padding: 1rem 0;
    }
    
    .auth-wrapper {
        margin: 0.5rem;
    }
    
    .auth-image {
        padding: 1.5rem;
        min-height: 250px;
    }
    
    .auth-form-container {
        padding: 1.5rem;
    }
    
    .form-options {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }
    
    .social-login {
        gap: 0.5rem;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('login-form');
    const passwordToggle = document.querySelector('.password-toggle');
    const passwordInput = document.getElementById('password');
    
    // Toggle password visibility
    if (passwordToggle) {
        passwordToggle.addEventListener('click', function() {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üôà';
        });
    }
    
    // Handle form submission
    if (loginForm) {
        loginForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const email = formData.get('email');
            const password = formData.get('password');
            const remember = formData.get('remember');
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.textContent;
            
            // Loading state
            submitBtn.disabled = true;
            submitBtn.classList.add('loading');
            
            try {
                await login(email, password);
                
                // Store remember preference
                if (remember) {
                    localStorage.setItem('rememberLogin', 'true');
                } else {
                    localStorage.removeItem('rememberLogin');
                }
                
            } catch (error) {
                console.error('Login error:', error);
            } finally {
                // Reset button
                submitBtn.disabled = false;
                submitBtn.classList.remove('loading');
            }
        });
    }
    
    // Auto-fill email if user chose to be remembered
    const rememberLogin = localStorage.getItem('rememberLogin');
    const savedEmail = localStorage.getItem('savedEmail');
    
    if (rememberLogin && savedEmail) {
        document.getElementById('email').value = savedEmail;
        document.getElementById('remember').checked = true;
    }
    
    // Social login handlers
    const googleBtn = document.querySelector('.btn-google');
    const microsoftBtn = document.querySelector('.btn-microsoft');
    
    if (googleBtn) {
        googleBtn.addEventListener('click', function() {
            showMessage('Login com Google em desenvolvimento', 'info');
        });
    }
    
    if (microsoftBtn) {
        microsoftBtn.addEventListener('click', function() {
            showMessage('Login com Microsoft em desenvolvimento', 'info');
        });
    }
});

// Enhanced login function
async function login(email, password) {
    try {
        showLoading();
        
        const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password })
        });
        
        const data = await response.json();
        
        if (response.ok) {
            // Store authentication data
            localStorage.setItem('authToken', data.token);
            localStorage.setItem('savedEmail', email);
            
            if (data.user) {
                localStorage.setItem('userData', JSON.stringify(data.user));
            }
            
            showMessage('Login realizado com sucesso!', 'success');
            
            // Redirect after short delay
            setTimeout(() => {
                const returnUrl = new URLSearchParams(window.location.search).get('return') || '/dashboard';
                window.location.href = returnUrl;
            }, 1500);
            
        } else {
            throw new Error(data.erro || 'Erro ao fazer login');
        }
        
    } catch (error) {
        showMessage(error.message || 'Erro de conex√£o. Tente novamente.', 'error');
        throw error;
    } finally {
        hideLoading();
    }
}
</script>